@using VS_LOAN.Core.Web.Resources;
@{
    ViewBag.Title = "Nhân sự";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="main-content-inner">
    <div class="breadcrumbs" id="breadcrumbs">
        <ul class="breadcrumb">
            <li>
                <a href="#" class="active">Duyệt hồ sơ</a>
            </li>
        </ul>
    </div>
    <div class="page-content" id="panel_body">
        <div class="row">
            <div class="col-xs-12">
                <form class="form-horizontal" role="form">
                    <div class="space-4"></div>
                    <div class="form-group">
                        <label class="col-sm-1  col-xs-12 control-label no-padding-right" for="form-field-1">Vai trò trên trang</label>
                        <div class="col-sm-5 col-xs-12 ">
                            <select id="ddlRole" class="chosen-select form-control" data-placeholder="Vai trò trên trang"></select>
                        </div>
                        <label class="col-sm-1  col-xs-12 control-label no-padding-right" for="form-field-1">Tìm kiếm</label>
                        <div class="col-sm-5 col-xs-12 ">
                            <input type="text" class="form-control" id="txtFreeText" placeholder="Tìm kiếm" />
                        </div>

                    </div>
                    <div class="form-group text-right">
                        <div class="col-xs-12 ">
                            <a class="btn btn-primary" id="btnSearch">
                                Tìm kiếm
                            </a>
                            <a class="btn btn-primary" href="/Employee/AddNew">
                                Tạo mới
                            </a>
                        </div>
                    </div>

                </form>
                <hr>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <div class="clearfix">
                    <div class="pull-right tableTools-container"></div>
                </div>
                <div class="table-header">
                    Danh sách hồ sơ
                </div>
                <div class="dataTables_wrapper form-inline no-footer">
                    <div class="row">
                        <div class="col-xs-6">
                            <label>
                                Hiển thị
                                <select id="ddlLimit" class="form-control input-sm" onchange="onSelectLimit()">
                                    <option value="10">10</option>
                                    <option value="25">25</option>
                                    <option value="50">50</option>
                                    <option value="100">100</option>
                                </select> dòng mỗi trang
                            </label>
                        </div>
                    </div>
                </div>
                <!-- div.table-responsive -->
                <!-- div.dataTables_borderWrap -->
                <div class="col">
                    <div class="report-table-custom--overflow">
                        <table id="dtSource" class="report-table-custom table table-striped table-bordered table-hover">
                            <thead class="table-header">
                                <tr>
                                    <th class="center w-45">STT</th>
                                    <th class="m-w-120">Họ tên</th>
                                    <th class="w-150">ID</th>
                                    <th class="w-150">Mã</th>
                                    <th class="w-150">Tên đăng nhập</th>
                                    <th style="width: 150px">Email</th>
                                    <th class="w-84">Số điện thoại</th>
                                    <th style="width: 150px">Vai trò trên trang</th>
                                    <th class="m-w-300">Khu vực</th>
                                    <th class="w-150">Ngày vào làm</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
                <div class="clearfix" />
                <div class="one-row no-gutters justify-content-between paginate mb-50">
                    <div class="col-auto">
                        <div class="dataTables_info" id="dtSource_info" role="status" aria-live="polite"></div>
                    </div>
                    <div class="col-auto">
                        <div class="one-row no-gutters align-items-center">
                            <div class="col-auto">
                                <span id="totalPage"></span>
                            </div>
                            <div class="col">
                                <div class="dataTables_paginate paging_simple_numbers" id="dtSource_paginate">
                                    <ul class="pagination" id="paging"></ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /.col -->
        </div>
        <div class="clearfix"></div>

        <div class="clearfix"></div>
    </div>
</div>
<script>
    var queries = new URLSearchParams(window.location.search);
    var page = 1;
    var limit = 10;
    var pageMargin = 2;
    var totalPage = 1;
    var totalRecord = 0;
    $(document).ready(function e() {
        setTimeout(function () {

        }, 500);

        setDateTimeInput("#txtFromWorkDate", true, -30);
        setDateTimeInput("#txtToWorkDate", true);
        setDateTimeInput("#txtFromCreatedDate", false);
        setDateTimeInput("#txtToCreatedDate", false);
        getRoles("#ddlRole")
        preventTxtSearchEnter();
        window.addEventListener('popstate', function (e) {

            queries = new URLSearchParams(window.location.search)
            page = queries.get("page");
            if (isNullOrUndefined(page) || isNullOrWhiteSpace(page))
                page = 1;
            else
                page = parseInt(page)
            limit = queries.get("limit")
            if (isNullOrUndefined(limit) || isNullOrWhiteSpace(limit))
                limit = 10;
            else
                limit = parseInt(limit)
            getData(page, limit, memberId, true)
        });
        setTableLimit("#ddlLimit");
        bindQueries()
        getData(page, limit)
    })

    var strLoading = '@Global.Message_Loading';
    $('#btnSearch').click(function (e) {
        getData(page, limit);
    });
    function onClickPage(page) {
        page = page;
        getData(page, limit);
    }
    function bindQueries() {

        $('#txtFreeText').val(queries.get("freetext"))

        page = queries.get("page");
        if (isNullOrUndefined(page) || isNullOrWhiteSpace(page))
            page = 1;
        else
            page = parseInt(page)
        limit = queries.get("limit")
        if (isNullOrUndefined(limit) || isNullOrWhiteSpace(limit))
            limit = 10;
        else
            limit = parseInt(limit)
        $("#ddlLimit").val(limit)
        let workFromDate = queries.get("workFromDate");

        if (!isNullOrWhiteSpace(workFromDate)) {
            setValueForDateInput("#txtFromWorkDate", workFromDate)
        }
        let workToDate = queries.get("workToDate");
        if (!isNullOrWhiteSpace(workToDate)) {
            setValueForDateInput("#txtToWorkDate", workToDate)
        }


    }
    function renderStatus(statusId) {
        var statusString = "";

        return "<td class='text-left'>" + statusString + "</td>";;
    }
    function onSelectLimit() {
        limit = $("#ddlLimit").val()
        getData(1, limit)
    }

    function renderRow(index, rowData) {
        page = queries.get("page");
        if (isNullOrUndefined(page) || isNullOrWhiteSpace(page))
            page = 1;
        else
            page = parseInt(page)
        limit = queries.get("limit")
        if (isNullOrUndefined(limit) || isNullOrWhiteSpace(limit))
            limit = 10;
        else
            limit = parseInt(limit)
        var stt = (page - 1) * limit + index + 1;
        return "<tr role='row' class = 'odd'>"
            + renderTextCenter(stt, '', 'center w-45')
            + renderTextLink(rowData.FullName, `/employee/edit/${rowData.Id}`, '', "m-w-120")
            + renderTextLeft(rowData.Id, '', "w-150")
            + renderTextLeft(rowData.Code, '', "w-150")
            + renderTextLeft(rowData.UserName, '', "w-150")
            + renderTextLeft(rowData.Email, '','w-150')
            + renderTextLeft(rowData.Phone, '','w-84')
            + renderTextLeft(rowData.RoleName, '', "w-150")
            + renderTextLeft(rowData.Location, '', "m-w-300")
            + renderTextLeft(rowData.WorkDate, 'datetime', 'w-150')
            + "</tr>";
    }
    function renderTableBody(datas) {
        var tableBody = $("#dtSource").find("tbody");
        tableBody.empty();
        if (isNullOrNoItem(datas))
            return;
        $.each(datas, function (index, item) {
            tableBody.append(renderRow(index, item));
        });

    }
    function onEdit(id) {
        if (isNullOrUndefined(id))
            return;
        window.location = "/employee/edit/" + id;
    }
    function getData(page, limit,memberId=0, isPopState = false)
    {
        //showBlock($('#panel_body'), strLoading);
        //console.log($("#txtFromWorkDate").val())
        //console.log(formatDateFromString('29/11/2019'));
        $.ajax( {
                url: '/Employee/Search',
                type: "GET",
            contentType: "application/json",

            data: {
                'page': page,
                'limit': limit,
                'workFromDate': $("#txtFromWorkDate").val(),
                'workToDate': $("#txtToWorkDate").val(),
                'roleId': isNullOrUndefined($("#ddlRole").val())? 0: parseInt($("#ddlRole").val()),
                'freetext': $("#txtFreeText").val(),

            },
            success: function (response) {
                if (response.Message == null) {
                    totalRecord = response.data.TotalRecord;
                    let search = this.url.replace("/Employee/Index", "");
                    debugger
                    search = search.replace("/Employee/Search", "")
                    queries = new URLSearchParams(search)
                    page = queries.get("page");
                    if (isNullOrUndefined(page) || isNullOrWhiteSpace(page))
                        page = 1;
                    else
                        page = parseInt(page)
                    limit = queries.get("limit")
                    if (isNullOrUndefined(limit) || isNullOrWhiteSpace(limit))
                        limit = 10;
                    else
                        limit = parseInt(limit)
                    renderTableBody(response.data.Datas)
                    renderPageList(page, limit, totalRecord)
                    totalPage = getTotalPage(totalRecord, limit);
                    $("#dtSource_info").text("Tổng: " + totalRecord + " items");
                    $("#totalPage").text("Tổng: " + totalPage + " trang");
                }
                else {
                    swal({
                        title: "",
                        text: response.Message.ErrorMessage,
                        type: "error",
                        timer: 4000,
                        showConfirmButton: true,
                    });
                }
            },
                error: function (jqXHR, exception) {
                    showError(jqXHR, exception);
                },
                complete: function () {
                    $('#panel_body').unblock();
                    if (!isPopState) {
                        var requestUrl = this.url.replace("/Search", "/index")
                        window.history.pushState(requestUrl, this.title, requestUrl)
                    }

            }
        })

    }
</script>