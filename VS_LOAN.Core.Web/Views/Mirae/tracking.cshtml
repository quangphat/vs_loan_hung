

<style>

/* Style the tab */
.tab {
  overflow: hidden;
  border: 1px solid #ccc;
  background-color: #f1f1f1;
}

/* Style the buttons inside the tab */
.tab button {
  background-color: inherit;
  float: left;
  border: none;
  outline: none;
  cursor: pointer;
  padding: 14px 16px;
  transition: 0.3s;
  font-size: 17px;
}

/* Change background color of buttons on hover */
.tab button:hover {
  background-color: #ddd;
}

/* Create an active/current tablink class */
.tab button.active {
  background-color: #ccc;
}

/* Style the tab content */
.tabcontent {
  display: none;
  padding: 6px 12px;
  border: 1px solid #ccc;
  border-top: none;
  height: 100vh;
}

/* Style the close button */
.topright {
  float: right;
  cursor: pointer;
  font-size: 28px;
}

.topright:hover {color: red;}
</style>


@using VS_LOAN.Core.Web.Resources;
@{
    ViewBag.Title = "Tạo hồ sơ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model String

<div class="main-content-inner">
  
    <div class="page-content" id="panel_body">


<div class="tab">
  <button class="tablinks" onclick="openCity(event, 'London')" id="defaultOpen">Thông tin hồ sơ </button>
  <button class="tablinks" onclick="openCity(event, 'Paris')">Chứng từ tài liệu</button>
  <button class="tablinks" onclick="openCity(event, 'defer')">Quản lý defer</button>
</div>

<div id="London" class="tabcontent">
 
 @Html.Partial("infomationApp", null, new ViewDataDictionary { { "isAdmin", ViewBag.isAdmin } })
</div>
<div id="Paris" class="tabcontent">


         <div class="row">
       
            <div class="col-xs-12">
                <h3 class="header smaller lighter blue">3.Hồ sơ đính kèm:</h3>
                <div class="row">
                    <div class="col-xs-12" style="overflow-y: scroll;max-height:400px;">
                        <form class="form-horizontal" role="form" id="lstTailieu"></form>
                    </div>
                </div>




            </div>

        </div>

         <div class="row">
      <div class="pull-right">
            
                <a class="btn btn-sm btn-primary"  onclick ="uploadHosoTab()">
                    Uploadchứng từ
                
                </a>
        </div>
         </div>

  

     
</div>


<div id="Tokyo" class="tabcontent">
  <span onclick="this.parentElement.style.display='none'" class="topright">&times</span>
  <h3>Tokyo</h3>
  <p>Tokyo is the capital of Japan.</p>
</div>


<div id="defer" class="tabcontent">
 @if( !string.IsNullOrEmpty(ViewBag.model.AppId ) )
 {
    @Html.Partial("deferApp", null, new ViewDataDictionary { { "appId", ViewBag.model.AppId } })

 }
</div>

        
    </div>
</div>


<script>
function openCity(evt, cityName) {
  // Declare all variables
  var i, tabcontent, tablinks;

  // Get all elements with class="tabcontent" and hide them
  tabcontent = document.getElementsByClassName("tabcontent");
  for (i = 0; i < tabcontent.length; i++) {
    tabcontent[i].style.display = "none";
  }

  // Get all elements with class="tablinks" and remove the class "active"
  tablinks = document.getElementsByClassName("tablinks");
  for (i = 0; i < tablinks.length; i++) {
    tablinks[i].className = tablinks[i].className.replace(" active", "");
  }

  // Show the current tab, and add an "active" class to the button that opened the tab
  document.getElementById(cityName).style.display = "block";

}


  openCity(event, 'London');


</script>







<script>


    $(document).ready(function () {

         $('#salesofficer').chosen({ width: '100%', allow_single_deselect: true });
        $('#ddlSanPhamVay').chosen({ width: '100%', allow_single_deselect: true });
        $('#ddlCourier').chosen({ width: '100%', allow_single_deselect: true });
        $('#ddlHuyen').chosen({ width: '100%', allow_single_deselect: true });
        $('#ddlTinh').chosen({ width: '100%', allow_single_deselect: true });
        $('#RegAddressProvinceId').chosen({ width: '100%', allow_single_deselect: true });
        $('#RegAddressDistId').chosen({ width: '100%', allow_single_deselect: true });
        $('#RegAddressWardId').chosen({ width: '100%', allow_single_deselect: true });
        $('#RegAddressProvinceId').chosen({ width: '100%', allow_single_deselect: true });
        $("#txtToDate").datepicker({ dateFormat: 'yy/mm/dd' }).datepicker("setDate", new Date().getDay + 0);
        $('#idissuer').chosen({ width: '100%', allow_single_deselect: true });
              LayDSTinhCMND("idissuer");
        $('#txtBirhDay').datepicker({
            dateFormat: 'dd-mm-yy'

        }).next().on(ace.click_event, function () {
            $(this).prev().focus();
        });

      
         Getcomments();

      $('#frmAdd select').each(
       function(index){  
        var inputelement = $(this);
        inputelement.chosen({ width: '100%', allow_single_deselect: true });


       });
        $('#frmAdd input, #frmAdd select').each(
       function(index){  
        var inputelement = $(this);
        var typeAssinge = inputelement.attr("typeInput");
        if(typeAssinge)
        {



            if(typeAssinge =="phoneInput")
            {
                inputelement.ForceNumericOnly();

            }

            else if( typeAssinge =="")
            {


            }

        }

        else 

        {


        }
    }
);

    });

    jQuery.fn.ForceNumericOnly =function () {
    return this.each(function () {
        $(this).keydown(function (e) {
            var key = e.charCode || e.keyCode || 0;
            // allow backspace, tab, delete, enter, arrows, numbers and keypad numbers ONLY
            // home, end, period, and numpad decimal
            return (
                key == 8 ||
                key == 9 ||
                key == 13 ||
                key == 46 ||
                key == 110 ||
                key == 190 ||
                (key >= 35 && key <= 40) ||
                (key >= 48 && key <= 57) ||
                (key >= 96 && key <= 105));
        });
    });
};
    $("#txtDienThoai").ForceNumericOnly();
    $("#txtDienThoai2").ForceNumericOnly();
    
    $("#txtTienDeNghiVay").ForceNumericOnly();
    $("#txtCMND").ForceNumericOnly();
    $("#txtTienDeNghiVay").change(function () {
        $("#txtTienDeNghiVay").val(formatCurrency($("#txtTienDeNghiVay").val().replace(/\./g, '')));
    });


function lowerFirstLetter(string) {
  return string.charAt(0).toLowerCase() + string.slice(1);
}
    function bindData()
    {

        var model = @Html.Raw(Json.Encode(ViewBag.model));

        if(model.AppId != null && model.appId !="")
        {
            $("#btnCreateQDE").hide();

        }

        if(model.isQDEToPor)
        {
            $("#btnQDEToDDE").hide();
            $("#btnCreateDDE").hide();
            $("#btnDDEToPOR").hide();
        }

        for(var key in model) {

            var keylower = lowerFirstLetter(key);
            var value = model[key];
            if(keylower =="lname")
            {
                
            }
             if(value != "")

            {

                var element = document.getElementById(keylower);

                if (element instanceof HTMLInputElement) {

                
                    if(element.classList.contains("date-picker"))
                    {
	                    $('#'+keylower).val(SetFormatDateTimeDMY(value));
                        
                    }
                    else 
                    {


                        element.value = value;

                    }
                }       
                
                if (element instanceof HTMLSelectElement) { 
                        

                        var autobind =element.getAttribute("autobind");
                        if(autobind =="false")
                        {
                            
                     

                        }
                        else 
                        {
                            element.value = value;

                             $('#'+keylower).chosen().trigger("chosen:updated");

                        }
                    

                     
                 
                }    
                
                if (element instanceof HTMLTextAreaElement) {

                }  
                
            
            }
        
            
        }
    }

    var datamodel ={

    };

  

    $(document).ready(function () {
    
  
        $('#ddlTinhCur').on('change', function () {
         LayDSHuyen(this.value,"ddlHuyenCur");
          });
		
		
		 $('#ddlHuyenCur').on('change', function () {

            laydanhsachReward(this.value,"ddlRewardCur");
			
        }); 


          $('#ddlTinhPer').on('change', function () {
                    LayDSHuyen(this.value,"ddlHuyenPer");
          });
		
		
		 $('#ddlHuyenPer').on('change', function () {

            laydanhsachReward(this.value,"ddlRewardPer");
			
        }); 



	 $('#ddlHuyenCur').on('change', function () {

            laydanhsachReward(this.value,"ddlRewardCur");
			
        }); 


          $('#cityCompany').on('change', function () {
                    LayDSHuyen(this.value,"districtCompany");
          });
		
		
		 $('#districtCompany').on('change', function () {

            laydanhsachReward(this.value,"wardCompany");
			
        }); 
    
     
        $('#dob').datepicker({
            dateFormat: 'dd-mm-yy'

        }).next().on(ace.click_event, function () {
            $(this).prev().focus();
        });

          $('#nationalidissuedate').datepicker({
            dateFormat: 'dd-mm-yy'

        }).next().on(ace.click_event, function () {
            $(this).prev().focus();
        });
  
        $('#txtNationDate').datepicker({
            dateFormat: 'dd-mm-yy'

        }).next().on(ace.click_event, function () {
            $(this).prev().focus();
        });
        $("#txtInCome").ForceNumericOnly();
        $("#txtInCome").change(function () {
        $("#txtInCome").val(formatCurrency($("#txtInCome").val().replace(/\./g, '')));
        });


        $("#txtTienDeNghiVay").ForceNumericOnly();
        $("#txtTienDeNghiVay").change(function () {
        $("#txtTienDeNghiVay").val(formatCurrency($("#txtTienDeNghiVay").val().replace(/\./g, '')));
        });


            $('#ddlloaisanpham').on('change', function () {


        

        });


        var modelbind = @Html.Raw(Json.Encode(ViewBag.model));
         bindData();
        LayDSTaiLieu(modelbind.Id);
        datamodel =modelbind;
        LayDanhSachSaleOfficer();
        LayDSSanPham();
        GetAllBank();
        GetAllStatus(datamodel.Status);     
        var modelbindViewbag = @Html.Raw(Json.Encode(ViewBag));     
               
        laydanhsachtinh("#ddlTinhCur", modelbind.AddressCur_City, modelbind.AddressCur_District, "#ddlHuyenCur" , "#ddlRewardCur" , modelbind.AddressCur_Ward );

        laydanhsachtinh("#cityCompany", modelbind.CityCompany, modelbind.DistrictCompany, "#districtCompany" , "#wardCompany" , modelbind.WardCompany );
  
       laydanhsachtinh("#ddlTinhPer", modelbind.AddressPer_City, modelbind.AddressPer_District, "#ddlHuyenPer" , "#ddlRewardPer" , modelbind.AddressPer_Ward );

        if( datamodel.addressCur_in_propertystatus =="R")
        {
            
            if(val =="R")
            {
                $(".displayRoom").show();
            }
            else  {
                $(".displayRoom").hide();

            }

            
        }

        if(datamodel.IsQDEToDDE)
        {
                $("#btnQDEToDDE").hide();
        }
        else 
        {
            $("#btnQDEToDDE").show();
        }

        if(datamodel.IsQDEToPor)
        {
                $("#btnCreateDDE").hide();
                $("#btnDDEToPOR").hide();
                $("#btnSendProfile").hide();
        
        }
        else 
        {
                $("#btnCreateDDE").show();
                $("#btnDDEToPOR").show();
        }


        if(datamodel.IsPushDoucment)
        {
                $("#btnSendProfile").hide();
                $("#btnPushDDE").hide();
        }
        else 
        {
            
        }
            

$("#maritalstatus").val(datamodel.Maritalstatus);
$("#maritalstatus").chosen().trigger("chosen:updated");
$("#eduqualify").val(datamodel.Eduqualify);
$("#eduqualify").chosen().trigger("chosen:updated");
$("#paymentchannel").val(datamodel.Paymentchannel);
$("#paymentchannel").chosen().trigger("chosen:updated");
$("#paymentchannel").val(datamodel.Paymentchannel);
$("#paymentchannel").chosen().trigger("chosen:updated");
$("#acctype").val(datamodel.Acctype);
$("#acctype").chosen().trigger("chosen:updated");
$("#acctype").val(datamodel.Acctype);
$("#acctype").chosen().trigger("chosen:updated");
$("#loanpurpose").val(datamodel.Loanpurpose);
$("#loanpurpose").chosen().trigger("chosen:updated");
$("#bankname").val(datamodel.Bankname);
$("#bankname").chosen().trigger("chosen:updated");
$("#schemeid").val(datamodel.Bankname);
$("#schemeid").chosen().trigger("chosen:updated");
$("#addressCur_in_propertystatus").val(datamodel.AddressCur_in_propertystatus);
$("#addressCur_in_propertystatus").chosen().trigger("chosen:updated");

$("#priority_c").val(datamodel.Priority_c);
$("#priority_c").chosen().trigger("chosen:updated");

$("#addresstype").val(datamodel.Addresstype);
$("#addresstype").chosen().trigger("chosen:updated");
$("#refferee1_Refereere1ation").val(datamodel.Refferee1_Refereere1ation);
$("#refferee1_Refereerelation").chosen().trigger("chosen:updated");



$("#refferee2_Refereere1ation").val(datamodel.Refferee2_Refereere1ation);
$("#refferee2_Refereerelation").chosen().trigger("chosen:updated");


$("#refferee3_Refereere1ation").val(datamodel.Refferee3_Refereere1ation);
$("#refferee3_Refereerelation").chosen().trigger("chosen:updated");
     if(datamodel.IsDuplicateAdrees )
        {
                $('#IsDuplicateAdreesHas').prop('checked',true);
        }
        else 
        {

        $('#IsDuplicateAdreesNo').prop('checked',true);
        }


     
        if(datamodel.Laa_app_ins_applicable == "True")
        {
                $('#IsLaa_app_ins_applicableHas').prop('checked',true);
        }
        else 
        {

        $('#IsLaa_app_ins_applicablesNo').prop('checked',true);
        }

        if(datamodel.Accountbank == 1)

        {
                $('#accountbankHas').prop('checked',true);
        }
        else 
        {

        $('#accountbankNo').prop('checked',true);
        }




        });

            



    $('#spnThoiHanVay').ace_spinner({ value: 0, min: 0, max: 36, step: 3, btn_up_class: 'btn-info', btn_down_class: 'btn-info' })
				.closest('.ace-spinner')
				.on('changed.fu.spinbox', function () {
				    //alert($('#spinner1').val())
				});
				
		
    function LayDSTinh(idTinh) {

        var idTinh ='#'+idTinh;
        $.ajax({
            type: "get",
            url: '@Url.Action("LayDanhSachTinh", "Mirae")',
            data: {},
            success: function (data) {
                $(idTinh).empty();
                $(idTinh).append("<option value='0'></option>");
                if (data != null) {
                    $.each(data.data, function (index, optionData) {
                         $(idTinh).append("<option value='" + optionData.Stateid + "'>" + optionData.Statedesc + "</option>");
                    });
                }
               
                  
            },
            complete: function () {

                
     
      
            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            }
        });


    }

 function LayDSTinhCMND(idTinh) {

        var idTinh ='#'+idTinh;
        $.ajax({
            type: "get",
            url: '@Url.Action("LayDanhSachTinh", "Mirae")',
            data: {},
            success: function (data) {
                $(idTinh).empty();
       
                $(idTinh).append("<option value='CỤC TRƯỞNG CỤC CS QLHC VỀ TTXH'>CỤC TRƯỞNG CỤC CS QLHC VỀ TTXH</option>");
                $(idTinh).append("<option value='CT CỤC CẢNH SÁT ĐKQL CƯ TRÚ VÀ DLQG VỀ DÂN CƯ'>  CT CỤC CẢNH SÁT ĐKQL CƯ TRÚ VÀ DLQG VỀ DÂN CƯ</option>");
                if (data != null) {
                    $.each(data.data, function (index, optionData) {
                         $(idTinh).append("<option value='" + optionData.Statedesc + "'>" + optionData.Statedesc + "</option>");
                    });
                }
                $(idTinh).chosen().trigger("chosen:updated");
            },
            complete: function () {
         
                $("#idissuer").val(datamodel.Idissuer); 
                $("#idissuer").chosen().trigger("chosen:updated");
            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            }
        });
    }

    function laydanhsachReward(ciityCode,idReward) {

        idReward='#'+idReward;
        $.ajax({
            type: "get",
            url: '@Url.Action("LayDanhSachWard", "Mirae")',
            data: {'cityCode':ciityCode},
            success: function (data) {
                $(idReward).empty();
                $(idReward).append("<option value='0'></option>");
                if (data != null) {
                    $.each(data.data, function (index, optionData) {
                        $(idReward).append("<option value='" + optionData.Zipcode + "'>" + optionData.Zipdesc + "</option>");
                    });
                }
                $(idReward).chosen().trigger("chosen:updated");
            },
            complete: function () {
            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            }
        });
    }
   
    function LayDSHuyen(maTinh, idHuyen) {
        idHuyen ='#'+idHuyen;
        $.ajax({
            type: "get",
            url: '@Url.Action("LayDanhSachThanhPho", "Mirae")',
            data: {'province':maTinh},
            success: function (data) {
                $(idHuyen).empty();
                $(idHuyen).append("<option value='0'></option>");
                if (data != null) {
                    $.each(data.data, function (index, optionData) {
                        $(idHuyen).append("<option value='" + optionData.Lmc_CITYID_C + "'>" + optionData.Lmc_CITYNAME_C + "</option>");
                    });
                }
                $(idHuyen).chosen().trigger("chosen:updated");
            },
            complete: function () {
            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            }
        });
    }

    

    function laydanhsachwarchThuongtru(ciityCode) {
        $.ajax({
            type: "get",
            url: '@Url.Action("LayDanhSachWard", "Ocb")',
            data: {'cityCode':ciityCode},
            success: function (data) {
                $('#RegAddressWardId').empty();
                $('#RegAddressWardId').append("<option value='0'></option>");
                if (data != null) {
                    $.each(data.data, function (index, optionData) {
                        $('#RegAddressWardId').append("<option value='" + optionData.WardId + "'>" + optionData.WardName + "</option>");
                    });
                }
                $('#RegAddressWardId').chosen().trigger("chosen:updated");
            },
            complete: function () {
            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            }
        });
    }



    function laydanhsachthanhphothuongtru(maTinh) {
        $.ajax({
            type: "get",
            url: '@Url.Action("LayDanhSachThanhPho", "Ocb")',
            data: {'province':maTinh},
            success: function (data) {
                $('#RegAddressDistId').empty();
                $('#RegAddressDistId').append("<option value='0'></option>");
                if (data != null) {
                    $.each(data.data, function (index, optionData) {
                        $('#RegAddressDistId').append("<option value='" + optionData.CityId + "'>" + optionData.CityName + "</option>");
                    });
                }
                $('#RegAddressDistId').chosen().trigger("chosen:updated");
            },
            complete: function () {
            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            }
        });
    }
    var lstDoitac =[]
    function LayDSNganHang() {
        $.ajax({
            type: "POST",
            url: '@Url.Action("LayDSDoiTac", "HoSo")',
            data: {},
            success: function (data) {
                $('#ddlDoiTac').empty();
                $('#ddlDoiTac').append("<option value='0'></option>");
                if (data != null) {

                    lstDoitac = data.data
                    $.each(data.data, function (index, optionData) {
                        $('#ddlDoiTac').append("<option value='" + optionData.ID + "'>" + optionData.Ten + "</option>");
                    });
                }
                $('#ddlDoiTac').chosen().trigger("chosen:updated");
            },
            complete: function () {
            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            }
        });
    }

    var save = false;
    var savePush = false;
    
 function laydanhsachtinh(controlId, value = null, districtValue = 0, districtControlId , controliIDReward , valueReward ) {
 
    $.ajax({
        type: "GET",
          url: '@Url.Action("LayDanhsachTinh", "Mirae")',
        success: function (data) {
            $(controlId).empty();
            $(controlId).append("<option value='0'></option>");
            if (data !== null) {
                  $.each(data.data, function (index, optionData) {
                         $(controlId).append("<option value='" + optionData.Stateid + "'>" + optionData.Statedesc + "</option>");
                    });
            }
           

        

        },
        complete: function () {
             if (value !== null)
            $(controlId).val(value);
            $(controlId).chosen().trigger("chosen:updated");
         
            getDistricts(districtControlId, value,districtValue,controliIDReward , valueReward );

        },
        error: function (jqXHR, exception) {
            showError(jqXHR, exception);
        }
    });
}


function getDistricts(controlId,provinceId, value = null,controliIDReward , valueReward) {

    if (isNullOrUndefined(provinceId))
        return;
    $.ajax({
        type: "GET",
        url: '/Mirae/LayDanhSachThanhPho?province=' + provinceId,
        success: function (data) {
            $(controlId).empty();
            $(controlId).append("<option value='0'></option>");
            if (data !== null) {
               $.each(data.data, function (index, optionData) {
                        $(controlId).append("<option value='" + optionData.Lmc_CITYID_C + "'>" + optionData.Lmc_CITYNAME_C + "</option>");
                    });
            }
          
          
        },
        complete: function () {
            
             if (value !== null)
             {

                $(controlId).val(value);
                $(controlId).chosen().trigger("chosen:updated");
                getReward(controliIDReward,value,valueReward);
             }
              
            

        },
        error: function (jqXHR, exception) {
            showError(jqXHR, exception);
        }
    });
}



function getReward(controlId, value, valueReward = null) {

    if (isNullOrUndefined(value))
        return;
    $.ajax({
        type: "GET",
        url: '/Mirae/LayDanhSachWard?cityCode=' + value,
        success: function (data) {
            $(controlId).empty();
            $(controlId).append("<option value='0'></option>");
            if (data !== null) {
                $.each(data.data, function (index, optionData) {
                        $(controlId).append("<option value='" + optionData.Zipcode + "'>" + optionData.Zipdesc + "</option>");
                    });


               
            }

        },
        complete: function () {
           

              if (valueReward !== null)
              {
                  valueReward = valueReward.toString();

                  if(valueReward.length <5)
                  {
                      valueReward = "0" + valueReward;
                  }
                $(controlId).val(valueReward);
                $(controlId).chosen().trigger("chosen:updated");
              }
               
        },
        error: function (jqXHR, exception) {
            showError(jqXHR, exception);
        }
    });
}


function LayDanhSachSaleOfficer() {
        
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetAllSaleOfficeUser", "Mirae")',
            data: { },
            success: function (data) {
                allProduct = data;
                $('#salesofficer').empty();
                $('#salesofficer').append("<option value='0'></option>");
                if (data != null) {
                    $.each(data.data, function (index, optionData) {
                        $('#salesofficer').append("<option value='" + optionData.Inspectorid + "'>" + optionData.Inspectorname + "</option>");
                    });
                }
                $('#salesofficer').chosen().trigger("chosen:updated");

            },
            complete: function () {
            $('#salesofficer').val(datamodel.Salesofficer);

             $('#salesofficer').chosen().trigger("chosen:updated");

            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            }
        });
    }




function GetAllBank() {
        
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetAllBank", "Mirae")',
            data: { },
            success: function (data) {
                allProduct = data;
                $('#bankname').empty();
                $('#bankname').append("<option value='0'></option>");
                if (data != null) {
                    $.each(data.data, function (index, optionData) {
                        $('#bankname').append("<option value='" + optionData.Bankid + "'>" + optionData.Bankdesc + "</option>");
                    });
                }
                $('#bankname').chosen().trigger("chosen:updated");

            },
            complete: function () {
            
                  $('#bankname').val(datamodel.Bankname);     
                    $('#bankname').chosen().trigger("chosen:updated");
                  
             },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            }
        });
    }
    function LayDSSanPham() {
        
        $.ajax({
            type: "POST",
            url: '@Url.Action("GetAllProduct", "Mirae")',
            data: { },
            success: function (data) {
                allProduct = data;
                $('#schemeid').empty();
                $('#schemeid').append("<option value='0'></option>");
                if (data != null) {
                    $.each(data.data, function (index, optionData) {
                        $('#schemeid').append("<option value='" + optionData.Schemeid + "'>" + optionData.Schemename + "</option>");
                    });
                }
                $('#schemeid').chosen().trigger("chosen:updated");

            },
            complete: function () {
            
                  $('#schemeid').val(datamodel.Schemeid);     
                    $('#schemeid').chosen().trigger("chosen:updated");
                  
                         },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            }
        });
    }


    var fileRequireIds =[];
    function LayDSTaiLieu(id) {

        $.ajax({
            type: "GET",
            url: "/mirae/TailieuByHosoForEdit?hosoId=" +id,
            success: function (data) {
                if (data.data != null && data.success == true) {
                    var i = 0;
                    var content = "";
                    let keys = [];
                    $.each(data.data, function (index, item) {
                        
                        
                        $("#lstTailieu").append("<div class='form-group'><div id='tailieu-" + item.ID + "'></div></div > ");
                        if (!isNullOrNoItem(item.Tailieus)) {
                            
                            let _initialPreview = [];
                            let _initialPreviewConfig = [];
                            $.each(item.Tailieus, function (i, tailieu) {
                                fileRequireIds.push(item.ID);
                                _initialPreview = [];
                                _initialPreviewConfig = [];
                                var _imgExts = ["jpg", "jpeg", "png", "pdf"];
                                var extn = tailieu.FileUrl.split('.').pop();
                                var isImg = isExtension(extn, _imgExts);
                                if (isImg) {
                                    _initialPreview.push(tailieu.FileUrl);
                                    _initialPreviewConfig.push({
                                        caption: tailieu.FileName,
                                        url: "/mirae/RemoveTailieuByHoso?hosoId=" + id + "&fileId=" + tailieu.FileId,
                                        type: extn.indexOf('pdf') > -1 ? "pdf" : "jpg",
                                        width: "120px"
                                    });
                                }
                                let name = '',
                                    isrequire = false,
                                    className = ''
                                if (keys.indexOf(tailieu.Key) < 0) {
                                    name = tailieu.KeyName;
                                    isrequire = true
                                }
                                else {
                                    className = 'mt-46'
                                }
                                renderOneItemFilMirae(tailieu.Key, tailieu.FileId, name, isrequire, className, true, _initialPreview, _initialPreviewConfig, true, true, onUploadFile, onDeleteFile,[],7)
                                
                                keys.push(item.ID)
                            })
                            if (item.Tailieus.length < 5) {
                                renderOneItemFilMirae(item.ID, item.ID, '', false, 'mt-46', true, [], [], true, false, onUploadFile, onDeleteFile,[],7)
                            }
                            
                        }
                        else {
                            renderOneItemFilMirae(item.ID, item.ID, item.Ten, item.BatBuoc, '', true, [], [], true, false, onUploadFile, onDeleteFile,[],7)
                        }
                       
                    });
                }

            },
            complete: function () {
            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            }
        });
        filesUpload = [];
        function onUploadFile(key, fileId, data, isExist) {
            if (isReach5Files(filesUpload, key))
                return;
            let response = data;
            if (isNullOrNoItem(filesUpload)) {
                filesUpload = []
            }

            fileRequireIds.push(key);
            if (isExist == false) {
                let file = {
                    Key: parseInt(response.initialPreviewConfig[0].key),
                    FileName: response.initialPreviewConfig[0].caption,
                    FileUrl: response.initialPreview,
                    KeyName: "",
                    Id: fileId
                }
                let existKeyIndex = filesUpload.findIndex(p => p.key == key)
                if (existKeyIndex < 0) {
                    filesUpload.push({ key: parseInt(key), files: [file] })
                }
                else {
                    if (filesUpload[existKeyIndex].files == null)
                        filesUpload[existKeyIndex].files = []
                    filesUpload[existKeyIndex].files.push(file);
                }
            }
     
        }
        function onDeleteFile(key, fileId, isExist) {
            
            let index = fileRequireIds.findIndex(p => p == key)
            fileRequireIds.splice(index, 1);
            removeFile(key, fileId);
        }
        function removeFile(key, fileId) {
			
            if (isNullOrNoItem(filesUpload))
                return;
            let index = filesUpload.findIndex(p => p.key == key);
            if (index >= 0) {
                if (!isNullOrNoItem(filesUpload[index].files)) {
                    let indexOfFile = filesUpload[index].files.findIndex(p => p.Id == fileId);
                    if (indexOfFile >= 0)
                        filesUpload[index].files.splice(indexOfFile, 1);
                }
            }
        }

    }
    function uploadHoso(hosoId, reloadOnSuccess = false) {
        if (isNullOrNoItem(filesUpload)) {
            if (reloadOnSuccess == true) {
                save =false;
                window.location = window.location;
            }
            return;
        }
            $.ajax({
                traditional: true,
                url: `/mirae/UploadToHoso?hosoId=${hosoId}&isReset=false`,
                type: "POST",
                contentType: "application/json;",
                dataType: 'json',
                data: JSON.stringify(filesUpload),
                success: function (data) {
                    if (data.data != null && data.success == true) {
                          save =false;  
                        if (reloadOnSuccess == true) {

                            window.location = window.location;
                        }

                        
                }
                else {
                    swal({
                        title: "@Html.Raw(Global.Message_Title)",
                        text: data.Message.ErrorMessage,
                        type: "error",
                        timer: 4000,
                        showConfirmButton: true,
                    });
                }
            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            },
            complete: function () {
               
                $('#panel_body').unblock();
            },
        });
        }

        

        $('#btn_Temp').click(function (e) {

    
        
        var data = {};
        data.SellerNote =$('#txtGhiChu').val();
        data.Status = $("#ddlStatus").val();
        $("#frmAdd").serializeArray().map(function(x){data[x.name] = x.value;});     
		
         var model = @Html.Raw(Json.Encode(ViewBag.model));
          data.Id =model.Id; 
          data.dob= $("#dob").val();
        data.dob= $("#dob").val();

           data.DobStr = $("#dob").val();
           data.NationalidissuedateStr = $("#nationalidissuedate").val();

          console.log(data);

         var objectSend = JSON.stringify(data);

       

        if(save ==true)
        {
            return;
        }
        
        save =true;
        
      
        $.ajax({
            traditional: true,
            url: '@Url.Action("UpdateMirae", "Mirae")',
            type: "POST",
            contentType: "application/json; charset=utf-8",
            data: objectSend,
            success: function (data) {
               if (data.success == true) {
                    swal({
                        title: "@Html.Raw(Global.Message_Title)",
                        text: "Thành công",
                        type: "success",
                        timer: 4000,
                        showConfirmButton: true,
                    }, function () {
                            save = false; 
                            uploadHoso(@ViewBag.model.Id, true);
                    });
                }
                else {
                    swal({
                        title: "Có lỗi",
                        text: data.code,
                        type: "error",
                        timer: 4000,
                        showConfirmButton: true,
                    }, function () {
                         save = false;
                         
                    });
                }
            },
            error: function (jqXHR, exception) {

                showError(jqXHR, exception);
            },
            complete: function () {

                 $('#panel_body').unblock();
                  save = false;
            },
        });
    });

      function uploadfile()
    {
         uploadHoso(@ViewBag.model.Id, true);

    }




 var savepushFile = false;

    $('#btnPushDDE').click(function (e) {

        var data = {};
        if(savepushFile ==true)
        {
            return;
        }
        
        var dataobject = {
                id : datamodel.Id
            };
      
           var objectSend = JSON.stringify(dataobject);
      
        $.ajax({
            traditional: true,
            url: '@Url.Action("SendFile", "Mirae")',
            type: "POST",
            contentType: "application/json; charset=utf-8",
            data: objectSend,
            success: function (data) {

                var itemresult = data.data;
                if (itemresult.Success == true) {
                    swal({
                        title: "@Html.Raw(Global.Message_Title)",
                        text: "Đẩy file thành công",
                        type: "success",
                        timer: 4000,
                        showConfirmButton: true,
                    }, function () {
                            savepushFile = false;
                            window.location = window.location;
                    });
                }
                else {
                    swal({
                        title: "@Html.Raw(Global.Message_Title)",
                        text: itemresult.Message,
                        type: "error",
                        timer: 4000,
                        showConfirmButton: true,
                    }, function () {
                          savepushFile =false;
                         
                    });
                }
            },
            error: function (jqXHR, exception) {

                showError(jqXHR, exception);
            },
            complete: function () {

                 $('#panel_body').unblock();
                  savepushFile = false;
            },
        });
    });
                       


var savebtnSendProfile = false;

    $('#btnSendProfile').click(function (e) {

        var data = {};
        if(savebtnSendProfile ==true)
        {
            return;
        }
        
        var dataobject = {
                id : datamodel.Id
            };
      
           var objectSend = JSON.stringify(dataobject);
      
        $.ajax({
            traditional: true,
            url: '@Url.Action("PushToMafc", "Mirae")',
            type: "POST",
            contentType: "application/json; charset=utf-8",
            data: objectSend,
            success: function (data) {
                console.log(data);
                if (data.success == true) {
                    swal({
                        title: "@Html.Raw(Global.Message_Title)",
                        text: data.code,
                        type: "success",
                        timer: 4000,
                        showConfirmButton: true,
                    }, function () {
                            savebtnSendProfile = false;
                            //window.location = window.location;
                    });
                }
                else {

                    var mesageError = data.code;

                    if(data.code =="")
                    {
                        mesageError = data.data.Message;
                    }
                    swal({
                        title: "Có lỗi",
                        text: mesageError,
                        type: "error",
                        timer: 4000,
                        showConfirmButton: true,
                    }, function () {
                          savebtnSendProfile =false;
                         
                    });
                }
            },
            error: function (jqXHR, exception) {

                showError(jqXHR, exception);
            },
            complete: function () {

                 $('#panel_body').unblock();
                  savebtnSendProfile = false;
            },
        });
    });


 var savepushDDE = false;
    




    $('#btnCreateDDE').click(function (e) {

        var data = {};
        if(savepushDDE ==true)
        {
            return;
        }
        
         var dataobject = {
                id : datamodel.Id
            };
      
           var objectSend = JSON.stringify(dataobject);
      
        $.ajax({
            traditional: true,
            url: '@Url.Action("SumbitToDDE", "Mirae")',
            type: "POST",
            contentType: "application/json; charset=utf-8",
            data: objectSend,
            success: function (data) {
                if (data.success == true) {
                    swal({
                        title: "@Html.Raw(Global.Message_Title)",
                        text: "Tạo DDE thành công",
                        type: "success",
                        timer: 4000,
                        showConfirmButton: true,
                    }, function () {
                            savepushDDE = false;
                            window.location = window.location;
                    });
                }
                else {

                    var mesageError = data.code;

                    if(data.code =="")
                    {
                        mesageError = data.data.Message;
                    }
                    swal({
                        title: "Có lỗi",
                        text: mesageError,
                        type: "error",
                        timer: 4000,
                        showConfirmButton: true,
                    }, function () {
                          savepushDDE =false;
                         
                    });
                }
            },
            error: function (jqXHR, exception) {

                showError(jqXHR, exception);
            },
            complete: function () {

                 $('#panel_body').unblock();
                  savepushDDE = false;
            },
        });
    });

 var savePush = false;

var savePushToDDE = false;

 $('#btnQDEToDDE').click(function (e) {
        var data = {};

        if(savePushToDDE ==true)
        {
            return;
        }
        
        var dataobject = {
            id : datamodel.Id
        };
      
           var objectSend = JSON.stringify(dataobject);
      
        $.ajax({
            traditional: true,
            url: '@Url.Action("QDEToDDE", "Mirae")',
            type: "POST",
            contentType: "application/json; charset=utf-8",
            data: objectSend,
            success: function (data) {
                if (data.success == true) {
                    swal({
                        title: "@Html.Raw(Global.Message_Title)",
                        text: "Chuyển đổi trạng thái sang DDE thành công",
                        type: "success",
                        timer: 4000,
                        showConfirmButton: true,
                    }, function () {
                            savePushToDDE = false;
                            window.location = window.location;
                    });
                }
                else {
                    var MessageCode = data.code;
                    if(MessageCode =="")
                    {
                        MessageCode = data.data.Message;
                    }
                    swal({
                        title: "@Html.Raw(Global.Message_Title)",
                        text: data.data.Message,
                        type: "error",
                        timer: 4000,
                        showConfirmButton: true,
                    }, function () {
                          savePushToDDE =false;
                        
                    });
                }
            },
            error: function (jqXHR, exception) {

                showError(jqXHR, exception);
            },
            complete: function () {

                 $('#panel_body').unblock();
                  savePushToDDE = false;
            },
        });
    });


var savePushToPOR =false;
 $('#btnDDEToPOR').click(function (e) {
        var data = {};

        if(savePushToPOR ==true)
        {
            return;
        }
        
        var dataobject = {
                id : datamodel.Id
            };
      
           var objectSend = JSON.stringify(dataobject);
      
        $.ajax({
            traditional: true,
            url: '@Url.Action("BDEToPor", "Mirae")',
            type: "POST",
            contentType: "application/json; charset=utf-8",
            data: objectSend,
            success: function (data) {
                if (data.success == true) {
                    swal({
                        title: "@Html.Raw(Global.Message_Title)",
                        text: "Chuyển đổi trạng thái POR thành công",
                        type: "success",
                        timer: 4000,
                        showConfirmButton: true,
                    }, function () {
                            savePushToPOR = false;
                            window.location = window.location;
                    });
                }
                else {
                    var MessageCode = data.code;
                    if(MessageCode =="")
                    {
                        MessageCode = data.data.Message;
                    }
                    swal({
                        title: "@Html.Raw(Global.Message_Title)",
                        text: data.data.Message,
                        type: "error",
                        timer: 4000,
                        showConfirmButton: true,
                    }, function () {
                          savePushToPOR =false;
                        
                    });
                }
            },
            error: function (jqXHR, exception) {

                showError(jqXHR, exception);
            },
            complete: function () {

                 $('#panel_body').unblock();
                  savePushToPOR = false;
            },
        });
    });


    $('#btnCreateQDE').click(function (e) {
        var data = {};
        if(savePush ==true)
        {
            return;
        }
        
        var dataobject = {
                id : datamodel.Id
            };
      
           var objectSend = JSON.stringify(dataobject);
      
        $.ajax({
            traditional: true,
            url: '@Url.Action("SumbitToOcb", "Mirae")',
            type: "POST",
            contentType: "application/json; charset=utf-8",
            data: objectSend,
            success: function (data) {
                if (data.success == true) {
                    swal({
                        title: "@Html.Raw(Global.Message_Title)",
                        text: "Tạo QDE thành công",
                        type: "success",
                        timer: 4000,
                        showConfirmButton: true,
                    }, function () {
                            savePush = false;
                            window.location = window.location;
                    });
                }
                else {
                   

                    var errorCode = data.code;
                    if(errorCode =="")
                    {
                        errorCode = data.data.Message;
                    }
                    swal({
                        title: "@Html.Raw(Global.Message_Title)",
                        text: errorCode,
                        type: "error",
                        timer: 4000,
                        showConfirmButton: true,
                    }, function () {
                          savePush =false;
                       
                    });
                }
            },
            error: function (jqXHR, exception) {

                showError(jqXHR, exception);
            },
            complete: function () {

                 $('#panel_body').unblock();
                  savePush = false;
            },
        });
    });
 

 $("#addressCur_in_propertystatus").change(function () {
        var val = this.value;
       
       if(val =="R")
       {
         $(".displayRoom").show();
       }
       else  {
        $(".displayRoom").hide();

       }

    });
 

 function uploadHosoTab()
 {
    uploadHoso( @ViewBag.model.Id, true);
 }

  function GetAllStatus(status) {
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetAllStatus", "Ocb")',

            success: function (data) {
                $('#ddlStatus').empty();
                $('#ddlStatus').append("<option value='-1'></option>");
                if (data != null) {
                    $.each(data.data, function (index, optionData) {
                        $('#ddlStatus').append("<option value='" + optionData.Code + "'>" + optionData.Name + "</option>");
                    });
                }
                $('#ddlStatus').chosen().trigger("chosen:updated");

            },
            complete: function () {
			
				$('#ddlStatus').val(status);
				  $('#ddlStatus').chosen().trigger("chosen:updated");

            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            }
        });
    }

     function Getcomments() {
        //$('#ddlTrangThai').empty();
        $.ajax({
            type: "POST",
            url: `/Mirae/Comments?profileId=${@ViewBag.model.Id}`,
            data: {},
            success: function (data) {
                if (data.data != null && data.success == true) {
                    $.each(data.data, function (index, item) {
                        $('#dsGhichu').append(
                            '<div class="timeline-event-content  active">' +
                            '<div class="timeline-item">' +
                            '<div class="timeline-body">' +
                            '<div class="timeline__message-container">' +
                            '<strong>' + item.Commentator + ' (' + SetFormatDateTimeDMY(item.CommentTime) + '): </strong><span>' + item.Noidung + '</span>' +
                            '</div></div></div></div>'
                        )
                    });
                }

            },
            complete: function () {
            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            }
        });
    }

   
         function createFile() {
        //$('#ddlTrangThai').empty();
        $.ajax({
            type: "POST",
            url: `/mirae/GetFilePdfExport?id=${@ViewBag.model.Id}`,
            data: {},
            success: function (data) {
                if (data.data != null && data.success == true) {
                    let a= document.createElement('a');
                    a.target= '_blank';
                    a.href= data.data;;
                    a.click();
                }

            },
            complete: function () {
            },
            error: function (jqXHR, exception) {
                showError(jqXHR, exception);
            }
        });
    }
</script>


